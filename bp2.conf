% true oznaczałoby losowanie wag dla neuronów, weights jest wtedy ignorowane
random_weights = true;

% dane wejściowe
input_data = [

 1 0 0  0 0 0  0 0 0;
 0 1 0  0 0 0  0 0 0;
 1 1 0  0 0 0  0 0 0;
 1 0 0  0 0 0  0 0 0;

];

expected = [
 1 0 0;
 0 1 0;
 0 0 1;
 1 0 0;
];

global stages = [1 1000 2000 2500 3000]
global etas = [0.3 0.3 0.3 0.3]
global momentums = [0.1 0.1 0.1 0.1]

global layers = {};
learn_steps = 10000;
% pierwsza warstwa
% liczba neuronów w warstwie
layers{1}.type='bp';
layers{1}.neurons = 6;
%layers{1}.row_count = 1;
% funkcja aktywacji
layers{1}.activation_function =@(X) sigmoid(X);
% wartość bias
layers{1}.bias = 1.0;
% przedział, z którego są losowane wagi
layers{1}.rand_min = -1.0;
layers{1}.rand_max = 1.0;
layers{1}.learn = true;
layers{1}.random_weights = true;

layers{1}.weights = [
  ]
layers{1}.epochs = [1 1000 2000 2500 3000];
layers{1}.delta = 0.0;


layers{2}.type='bp';
layers{2}.neurons = 3;
%layers{1}.row_count = 1;
% funkcja aktywacji
layers{2}.activation_function =@(X) sigmoid(X);
% wartość bias
layers{2}.bias = 1.0;
% przedział, z którego są losowane wagi
layers{2}.rand_min = -1.0;
layers{2}.rand_max = 1.0;
layers{2}.learn = true;
layers{2}.random_weights = true;

layers{2}.weights = [
  ]
layers{2}.epochs = [1 1000 2000 2500 3000];
layers{2}.delta = 0.0;

